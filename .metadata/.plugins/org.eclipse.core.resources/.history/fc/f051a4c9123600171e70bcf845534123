package com.firstWork;

import java.util.LinkedList;

public class Snake {
	private LinkedList<Node> body = new LinkedList<Node>();
	
	public Node eat(Node food,Direction direction){
		
		Node snakeHead = this.getHead();
		int headX = snakeHead.getX();
		int headY = snakeHead.getY();
		
		switch(direction){
		case UP:
			break;
		case RIGHT:
			break;
		case DOWN:
			break;
		case LEFT:
			break;
		default:
			try {
				throw new Exception("未知方向");
			} catch (Exception e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
		
		this.body.addFirst(food);
		return food;
	}
	
	public Node move(Direction direction){
		
		Node head = this.getHead();
		int headX = head.getX();
		int headY = head.getY();
		Node newHead = null;
		switch(direction){
		case UP:
			newHead = new Node(headX,headY-1);
			break;
		case RIGHT:
			newHead = new Node(headX-1,headY);
			break;
		case DOWN:
			newHead = new Node(headX,headY-1);
			break;
		case LEFT:
			newHead = new Node(headX+1,headY);
			break;
		default:
			try {
				throw new Exception("未知方向");
			} catch (Exception e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
		
		this.body.addFirst(newHead);
		Node oldTail = this.body.removeLast();
		return oldTail;
		
	}
	
	public Node getHead(){
		return body.getFirst();
	}
	
	public Node addTail(Node node){
		this.body.addLast(node);
		return node;
	}
	
	public LinkedList<Node> getBody(){
		return body;
	}
	
	
	
}
